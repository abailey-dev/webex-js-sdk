/*!-----------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.20.0(6363745c0a33c27b149b89342a7b96d354fb554c)
 * Released under the MIT license
 * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt
 *-----------------------------------------------------------*/


let define; let AMDLoader;
const _amdLoaderGlobal = this;
const _commonjsGlobal = typeof global === 'object' ? global : {};

!(function (e) {
  e.global = _amdLoaderGlobal; const t = (function () {
    function t() { this._detected = !1, this._isWindows = !1, this._isNode = !1, this._isElectronRenderer = !1, this._isWebWorker = !1; }

    return Object.defineProperty(t.prototype, 'isWindows', {get() { return this._detect(), this._isWindows; }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, 'isNode', {get() { return this._detect(), this._isNode; }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, 'isElectronRenderer', {get() { return this._detect(), this._isElectronRenderer; }, enumerable: !0, configurable: !0}), Object.defineProperty(t.prototype, 'isWebWorker', {get() { return this._detect(), this._isWebWorker; }, enumerable: !0, configurable: !0}), t.prototype._detect = function () {
      this._detected || (this._detected = !0, this._isWindows = t._isWindows(), this._isNode = typeof module !== 'undefined' && !!module.exports,
      this._isElectronRenderer = typeof process !== 'undefined' && void 0 !== process.versions && void 0 !== process.versions.electron && process.type === 'renderer', this._isWebWorker = typeof e.global.importScripts === 'function');
    }, t._isWindows = function () { return !!(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) || typeof process !== 'undefined' && process.platform === 'win32'; }, t;
  }());

  e.Environment = t;
}(AMDLoader || (AMDLoader = {}))), (function (e) {
  const t = function (e, t, r) { this.type = e, this.detail = t, this.timestamp = r; };

  e.LoaderEvent = t; const r = (function () {
    function r(e) { this._events = [new t(1, '', e)]; }

    return r.prototype.record = function (r, n) { this._events.push(new t(r, n, e.Utilities.getHighPerformanceTimestamp())); }, r.prototype.getEvents = function () { return this._events; }, r;
  }());

  e.LoaderEventRecorder = r; const n = (function () {
    function e() {}

    return e.prototype.record = function (e, t) {}, e.prototype.getEvents = function () { return []; }, e.INSTANCE = new e(), e;
  }());

  e.NullLoaderEventRecorder = n;
}(AMDLoader || (AMDLoader = {}))), (function (e) {
  const t = (function () {
    function t() {}

    return t.fileUriToFilePath = function (e, t) {
      if (t = decodeURI(t).replace(/%23/g, '#'), e) { if (/^file:\/\/\//.test(t)) return t.substr(8); if (/^file:\/\//.test(t)) return t.substr(5); }
      else if (/^file:\/\//.test(t)) return t.substr(7);

      return t;
    }, t.startsWith = function (e, t) { return e.length >= t.length && e.substr(0, t.length) === t; }, t.endsWith = function (e, t) { return e.length >= t.length && e.substr(e.length - t.length) === t; }, t.containsQueryString = function (e) { return /^[^\#]*\?/gi.test(e); }, t.isAbsolutePath = function (e) { return /^((http:\/\/)|(https:\/\/)|(file:\/\/)|(\/))/.test(e); }, t.forEachProperty = function (e, t) {
      if (e) {
        let r = void 0;

        for (r in e)e.hasOwnProperty(r) && t(r, e[r]);
      }
    }, t.isEmpty = function (e) {
      let r = !0;

      return t.forEachProperty(e, (() => { r = !1; })), r;
    }, t.recursiveClone = function (e) {
      if (!e || typeof e !== 'object') return e; const r = Array.isArray(e) ? [] : {};

      return t.forEachProperty(e, ((e, n) => { r[e] = n && typeof n === 'object' ? t.recursiveClone(n) : n; })), r;
    }, t.generateAnonymousModule = function () { return `===anonymous${t.NEXT_ANONYMOUS_ID++}===`; },
    t.isAnonymousModule = function (e) { return t.startsWith(e, '===anonymous'); }, t.getHighPerformanceTimestamp = function () { return this.PERFORMANCE_NOW_PROBED || (this.PERFORMANCE_NOW_PROBED = !0, this.HAS_PERFORMANCE_NOW = e.global.performance && typeof e.global.performance.now === 'function'), this.HAS_PERFORMANCE_NOW ? e.global.performance.now() : Date.now(); }, t.NEXT_ANONYMOUS_ID = 1, t.PERFORMANCE_NOW_PROBED = !1, t.HAS_PERFORMANCE_NOW = !1, t;
  }());

  e.Utilities = t;
}(AMDLoader || (AMDLoader = {}))), (function (e) {
  function t(e) {
    if (e instanceof Error) return e; const t = new Error(e.message || String(e) || 'Unknown Error');

    return e.stack && (t.stack = e.stack), t;
  }e.ensureError = t; const r = (function () {
    function r() {}

    return r.validateConfigurationOptions = function (r) {
      if (typeof (r = r || {}).baseUrl !== 'string' && (r.baseUrl = ''), typeof r.isBuild !== 'boolean' && (r.isBuild = !1), typeof r.paths !== 'object' && (r.paths = {}), typeof r.config !== 'object' && (r.config = {}), void 0 === r.catchError && (r.catchError = !1), void 0 === r.recordStats && (r.recordStats = !1), typeof r.urlArgs !== 'string' && (r.urlArgs = ''),
      typeof r.onError !== 'function' && (r.onError = function (e) { return e.phase === 'loading' ? (console.error(`Loading "${e.moduleId}" failed`), console.error(e), console.error('Here are the modules that depend on it:'), void console.error(e.neededBy)) : e.phase === 'factory' ? (console.error(`The factory method of "${e.moduleId}" has thrown an exception`), void console.error(e)) : void 0; }), Array.isArray(r.ignoreDuplicateModules) || (r.ignoreDuplicateModules = []), r.baseUrl.length > 0 && (e.Utilities.endsWith(r.baseUrl, '/') || (r.baseUrl += '/')), typeof r.cspNonce !== 'string' && (r.cspNonce = ''), Array.isArray(r.nodeModules) || (r.nodeModules = []), r.nodeCachedData && typeof r.nodeCachedData === 'object' && (typeof r.nodeCachedData.seed !== 'string' && (r.nodeCachedData.seed = 'seed'), (typeof r.nodeCachedData.writeDelay !== 'number' || r.nodeCachedData.writeDelay < 0) && (r.nodeCachedData.writeDelay = 7e3), !r.nodeCachedData.path || typeof r.nodeCachedData.path !== 'string')) {
        const n = t(new Error("INVALID cached data configuration, 'path' MUST be set"));

        n.phase = 'configuration',
        r.onError(n), r.nodeCachedData = void 0;
      }

      return r;
    }, r.mergeConfigurationOptions = function (t, n) {
      void 0 === t && (t = null), void 0 === n && (n = null); const o = e.Utilities.recursiveClone(n || {});

      return e.Utilities.forEachProperty(t, ((t, r) => { t === 'ignoreDuplicateModules' && void 0 !== o.ignoreDuplicateModules ? o.ignoreDuplicateModules = o.ignoreDuplicateModules.concat(r) : t === 'paths' && void 0 !== o.paths ? e.Utilities.forEachProperty(r, ((e, t) => o.paths[e] = t)) : t === 'config' && void 0 !== o.config ? e.Utilities.forEachProperty(r, ((e, t) => o.config[e] = t)) : o[t] = e.Utilities.recursiveClone(r); })), r.validateConfigurationOptions(o);
    }, r;
  }());

  e.ConfigurationOptionsUtil = r; const n = (function () {
    function t(e, t) {
      if (this._env = e, this.options = r.mergeConfigurationOptions(t), this._createIgnoreDuplicateModulesMap(), this._createNodeModulesMap(), this._createSortedPathsRules(), this.options.baseUrl === '') {
        if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {
          var n = this.options.nodeRequire.main.filename; var o = Math.max(n.lastIndexOf('/'), n.lastIndexOf('\\'));

          this.options.baseUrl = n.substring(0, o + 1);
        } if (this.options.nodeMain && this._env.isNode) { n = this.options.nodeMain, o = Math.max(n.lastIndexOf('/'), n.lastIndexOf('\\')); this.options.baseUrl = n.substring(0, o + 1); }
      }
    }

    return t.prototype._createIgnoreDuplicateModulesMap = function () { this.ignoreDuplicateModulesMap = {}; for (let e = 0; e < this.options.ignoreDuplicateModules.length; e++) this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[e]] = !0; }, t.prototype._createNodeModulesMap = function () {
      this.nodeModulesMap = Object.create(null); for (let e = 0, t = this.options.nodeModules; e < t.length; e++) {
        const r = t[e];

        this.nodeModulesMap[r] = !0;
      }
    }, t.prototype._createSortedPathsRules = function () {
      const t = this;

      this.sortedPathsRules = [], e.Utilities.forEachProperty(this.options.paths, ((e, r) => { Array.isArray(r) ? t.sortedPathsRules.push({from: e, to: r}) : t.sortedPathsRules.push({from: e, to: [r]}); })), this.sortedPathsRules.sort(((e, t) => t.from.length - e.from.length));
    }, t.prototype.cloneAndMerge = function (e) { return new t(this._env, r.mergeConfigurationOptions(e, this.options)); }, t.prototype.getOptionsLiteral = function () { return this.options; }, t.prototype._applyPaths = function (t) {
      for (var r, n = 0, o = this.sortedPathsRules.length; n < o; n++) {
        if (r = this.sortedPathsRules[n], e.Utilities.startsWith(t, r.from)) {
          for (var i = [], s = 0, d = r.to.length; s < d; s++)i.push(r.to[s] + t.substr(r.from.length));

          return i;
        }
      }

      return [t];
    }, t.prototype._addUrlArgsToUrl = function (t) { return e.Utilities.containsQueryString(t) ? `${t}&${this.options.urlArgs}` : `${t}?${this.options.urlArgs}`; }, t.prototype._addUrlArgsIfNecessaryToUrl = function (e) { return this.options.urlArgs ? this._addUrlArgsToUrl(e) : e; }, t.prototype._addUrlArgsIfNecessaryToUrls = function (e) {
      if (this.options.urlArgs) for (let t = 0, r = e.length; t < r; t++)e[t] = this._addUrlArgsToUrl(e[t]);

      return e;
    }, t.prototype.moduleIdToPaths = function (t) {
      if (!0 === this.nodeModulesMap[t]) return this.isBuild() ? ['empty:'] : [`node|${t}`]; let r; let n = t;

      if (e.Utilities.endsWith(n, '.js') || e.Utilities.isAbsolutePath(n))e.Utilities.endsWith(n, '.js') || e.Utilities.containsQueryString(n) || (n += '.js'), r = [n]; else for (let o = 0, i = (r = this._applyPaths(n)).length; o < i; o++) this.isBuild() && r[o] === 'empty:' || (e.Utilities.isAbsolutePath(r[o]) || (r[o] = this.options.baseUrl + r[o]), e.Utilities.endsWith(r[o], '.js') || e.Utilities.containsQueryString(r[o]) || (r[o] = `${r[o]}.js`));

      return this._addUrlArgsIfNecessaryToUrls(r);
    }, t.prototype.requireToUrl = function (t) {
      let r = t;

      return e.Utilities.isAbsolutePath(r) || (r = this._applyPaths(r)[0], e.Utilities.isAbsolutePath(r) || (r = this.options.baseUrl + r)), this._addUrlArgsIfNecessaryToUrl(r);
    }, t.prototype.isBuild = function () { return this.options.isBuild; }, t.prototype.isDuplicateMessageIgnoredFor = function (e) { return this.ignoreDuplicateModulesMap.hasOwnProperty(e); }, t.prototype.getConfigForModule = function (e) { if (this.options.config) return this.options.config[e]; }, t.prototype.shouldCatchError = function () { return this.options.catchError; },
    t.prototype.shouldRecordStats = function () { return this.options.recordStats; }, t.prototype.onError = function (e) { this.options.onError(e); }, t;
  }());

  e.Configuration = n;
}(AMDLoader || (AMDLoader = {}))), (function (e) {
  const t = (function () {
    function e(e) { this._env = e, this._scriptLoader = null, this._callbackMap = {}; }

    return e.prototype.load = function (e, t, i, s) {
      const d = this;

      this._scriptLoader || (this._scriptLoader = this._env.isWebWorker ? new n() : this._env.isNode ? new o(this._env) : new r()); const a = {callback: i, errorback: s};

      this._callbackMap.hasOwnProperty(t) ? this._callbackMap[t].push(a) : (this._callbackMap[t] = [a], this._scriptLoader.load(e, t, (() => d.triggerCallback(t)), ((e) => d.triggerErrorback(t, e))));
    }, e.prototype.triggerCallback = function (e) {
      const t = this._callbackMap[e];

      delete this._callbackMap[e]; for (let r = 0; r < t.length; r++)t[r].callback();
    }, e.prototype.triggerErrorback = function (e, t) {
      const r = this._callbackMap[e];

      delete this._callbackMap[e]; for (let n = 0; n < r.length; n++)r[n].errorback(t);
    }, e;
  }()); var r = (function () {
    function e() {}

    return e.prototype.attachListeners = function (e, t, r) {
      const n = function () { e.removeEventListener('load', o), e.removeEventListener('error', i); }; var o = function (e) { n(), t(); }; var i = function (e) { n(), r(e); };

      e.addEventListener('load', o), e.addEventListener('error', i);
    }, e.prototype.load = function (e, t, r, n) {
      const o = document.createElement('script');

      o.setAttribute('async', 'async'), o.setAttribute('type', 'text/javascript'), this.attachListeners(o, r, n), o.setAttribute('src', t); const i = e.getConfig().getOptionsLiteral().cspNonce;

      i && o.setAttribute('nonce', i), document.getElementsByTagName('head')[0].appendChild(o);
    }, e;
  }()); var n = (function () {
    function e() {}

    return e.prototype.load = function (e, t, r, n) {
      try { importScripts(t), r(); }
      catch (e) { n(e); }
    }, e;
  }()); var o = (function () {
    function t(e) { this._env = e, this._didInitialize = !1, this._didPatchNodeRequire = !1; }

    return t.prototype._init = function (e) { this._didInitialize || (this._didInitialize = !0, this._fs = e('fs'), this._vm = e('vm'), this._path = e('path'), this._crypto = e('crypto')); }, t.prototype._initNodeRequire = function (e, t) {
      const r = t.getConfig().getOptionsLiteral().nodeCachedData;

      if (r && !this._didPatchNodeRequire) {
        this._didPatchNodeRequire = !0; const n = this; const o = e('module');

        o.prototype._compile = function (e, i) {
          let s; const d = o.wrap(e.replace(/^#!.*/, '')); const a = t.getRecorder(); const u = n._getCachedDataPath(r, i); const l = {filename: i};

          try {
            const c = n._fs.readFileSync(u);

            s = c.slice(0, 16), l.cachedData = c.slice(16), a.record(60, u);
          }
          catch (e) { a.record(61, u); } const h = new n._vm.Script(d, l); const f = h.runInThisContext(l); const p = n._path.dirname(i); const _ = (function (e) {
            const t = e.constructor; const r = function (t) {
              try { return e.require(t); }
              finally {}
            };

            return r.resolve = function (r) { return t._resolveFilename(r, e); }, r.main = process.mainModule, r.extensions = t._extensions, r.cache = t._cache, r;
          }(this)); const g = [this.exports, _, this, i, p, process, _commonjsGlobal, Buffer]; const v = f.apply(this.exports, g);

          return n._handleCachedData(h, d, u, !l.cachedData, t), n._verifyCachedData(h, d, u, s, t), v;
        };
      }
    }, t.prototype.load = function (r, n, o, i) {
      const s = this; const d = r.getConfig().getOptionsLiteral(); const a = d.nodeRequire || e.global.nodeRequire; const u = d.nodeInstrumenter || function (e) { return e; };

      this._init(a), this._initNodeRequire(a, r); const l = r.getRecorder();

      if (/^node\|/.test(n)) {
        const c = n.split('|'); let h = null;

        try { h = a(c[1]); }
        catch (e) { return void i(e); }r.enqueueDefineAnonymousModule([], (() => h)), o();
      }
      else {
        n = e.Utilities.fileUriToFilePath(this._env.isWindows, n); const f = this._path.normalize(n); const p = this._getElectronRendererScriptPathOrUri(f); const _ = Boolean(d.nodeCachedData); const g = _ ? this._getCachedDataPath(d.nodeCachedData, n) : void 0;

        this._readSourceAndCachedData(f, g, l, ((e, n, d, a) => {
          if (e)i(e); else {
            let l;

            l = n.charCodeAt(0) === t._BOM ? t._PREFIX + n.substring(1) + t._SUFFIX : t._PREFIX + n + t._SUFFIX, l = u(l, f); const c = {filename: p, cachedData: d}; const h = s._createAndEvalScript(r, l, c, o, i);

            s._handleCachedData(h, l, g, _ && !d, r), s._verifyCachedData(h, l, g, a, r);
          }
        }));
      }
    }, t.prototype._createAndEvalScript = function (t, r, n, o, i) {
      const s = t.getRecorder();

      s.record(31, n.filename); const d = new this._vm.Script(r, n); const a = d.runInThisContext(n); const u = t.getGlobalAMDDefineFunc(); let l = !1; const c = function () { return l = !0, u.apply(null, arguments); };

      return c.amd = u.amd,
      a.call(e.global, t.getGlobalAMDRequireFunc(), c, n.filename, this._path.dirname(n.filename)), s.record(32, n.filename), l ? o() : i(new Error(`Didn't receive define call in ${n.filename}!`)), d;
    }, t.prototype._getElectronRendererScriptPathOrUri = function (e) {
      if (!this._env.isElectronRenderer) return e; const t = e.match(/^([a-z])\:(.*)/i);

      return t ? `file:///${(`${t[1].toUpperCase()}:${t[2]}`).replace(/\\/g, '/')}` : `file://${e}`;
    }, t.prototype._getCachedDataPath = function (e, t) {
      const r = this._crypto.createHash('md5').update(t, 'utf8').update(e.seed, 'utf8').digest('hex'); const n = this._path.basename(t).replace(/\.js$/, '');

      return this._path.join(e.path, `${n}-${r}.code`);
    }, t.prototype._handleCachedData = function (e, t, r, n, o) {
      const i = this;

      e.cachedDataRejected ? this._fs.unlink(r, ((n) => { o.getRecorder().record(62, r), i._createAndWriteCachedData(e, t, r, o), n && o.getConfig().onError(n); })) : n && this._createAndWriteCachedData(e, t, r, o);
    }, t.prototype._createAndWriteCachedData = function (e, t, r, n) {
      const o = this; const i = Math.ceil(n.getConfig().getOptionsLiteral().nodeCachedData.writeDelay * (1 + Math.random())); let s = -1; let d = 0; let a = void 0; var u = function () {
        setTimeout((() => {
          a || (a = o._crypto.createHash('md5').update(t, 'utf8').digest()); const i = e.createCachedData();

          i.length === 0 || i.length === s || d >= 5 || (s = i.length, o._fs.writeFile(r, Buffer.concat([a, i]), ((e) => { e && n.getConfig().onError(e), n.getRecorder().record(63, r), u(); })));
        }), i * Math.pow(4, d++));
      };

      u();
    }, t.prototype._readSourceAndCachedData = function (e, t, r, n) {
      if (t) {
        let o = void 0; let i = void 0; let s = void 0; let d = 2; const a = function (e) { e ? n(e) : --d == 0 && n(void 0, o, i, s); };

        this._fs.readFile(e, {encoding: 'utf8'}, ((e, t) => { o = t, a(e); })), this._fs.readFile(t, ((e, n) => { !e && n && n.length > 0 ? (s = n.slice(0, 16), i = n.slice(16), r.record(60, t)) : r.record(61, t), a(); }));
      }
      else this._fs.readFile(e, {encoding: 'utf8'}, n);
    }, t.prototype._verifyCachedData = function (e, t, r, n, o) {
      const i = this;

      n && (e.cachedDataRejected || setTimeout((() => {
        const e = i._crypto.createHash('md5').update(t, 'utf8').digest();

        n.equals(e) || (o.getConfig().onError(new Error(`FAILED TO VERIFY CACHED DATA, deleting stale '${r}' now, but a RESTART IS REQUIRED`)), i._fs.unlink(r, ((e) => o.getConfig().onError(e))));
      }), Math.ceil(5e3 * (1 + Math.random()))));
    }, t._BOM = 65279, t._PREFIX = '(function (require, define, __filename, __dirname) { ', t._SUFFIX = '\n});', t;
  }());

  e.createScriptLoader = function (e) { return new t(e); };
}(AMDLoader || (AMDLoader = {}))), (function (e) {
  const t = (function () {
    function t(e) {
      const t = e.lastIndexOf('/');

      this.fromModulePath = t !== -1 ? e.substr(0, t + 1) : '';
    }

    return t._normalizeModuleId = function (e) {
      let t; let r = e;

      for (t = /\/\.\//; t.test(r);)r = r.replace(t, '/'); for (r = r.replace(/^\.\//g, ''), t = /\/(([^\/])|([^\/][^\/\.])|([^\/\.][^\/])|([^\/][^\/][^\/]+))\/\.\.\//; t.test(r);)r = r.replace(t, '/');

      return r = r.replace(/^(([^\/])|([^\/][^\/\.])|([^\/\.][^\/])|([^\/][^\/][^\/]+))\/\.\.\//, '');
    }, t.prototype.resolveModule = function (r) {
      let n = r;

      return e.Utilities.isAbsolutePath(n) || (e.Utilities.startsWith(n, './') || e.Utilities.startsWith(n, '../')) && (n = t._normalizeModuleId(this.fromModulePath + n)), n;
    }, t.ROOT = new t(''), t;
  }());

  e.ModuleIdResolver = t; const r = (function () {
    function t(e, t, r, n, o, i) { this.id = e, this.strId = t, this.dependencies = r, this._callback = n, this._errorback = o, this.moduleIdResolver = i, this.exports = {}, this.error = null, this.exportsPassedIn = !1, this.unresolvedDependenciesCount = this.dependencies.length, this._isComplete = !1; }

    return t._safeInvokeFunction = function (t, r) {
      try { return {returnedValue: t.apply(e.global, r), producedError: null}; }
      catch (e) { return {returnedValue: null, producedError: e}; }
    }, t._invokeFactory = function (t, r, n, o) { return t.isBuild() && !e.Utilities.isAnonymousModule(r) ? {returnedValue: null, producedError: null} : t.shouldCatchError() ? this._safeInvokeFunction(n, o) : {returnedValue: n.apply(e.global, o), producedError: null}; }, t.prototype.complete = function (r, n, o) {
      this._isComplete = !0; let i = null;

      if (this._callback) {
        if (typeof this._callback === 'function') {
          r.record(21, this.strId);
          const s = t._invokeFactory(n, this.strId, this._callback, o);

          i = s.producedError, r.record(22, this.strId), i || void 0 === s.returnedValue || this.exportsPassedIn && !e.Utilities.isEmpty(this.exports) || (this.exports = s.returnedValue);
        }
        else this.exports = this._callback;
      } if (i) {
        const d = e.ensureError(i);

        d.phase = 'factory', d.moduleId = this.strId, this.error = d, n.onError(d);
      } this.dependencies = null, this._callback = null, this._errorback = null, this.moduleIdResolver = null;
    }, t.prototype.onDependencyError = function (e) { return this._isComplete = !0, this.error = e, !!this._errorback && (this._errorback(e), !0); }, t.prototype.isComplete = function () { return this._isComplete; }, t;
  }());

  e.Module = r; const n = (function () {
    function e() { this._nextId = 0, this._strModuleIdToIntModuleId = new Map(), this._intModuleIdToStrModuleId = [], this.getModuleId('exports'), this.getModuleId('module'), this.getModuleId('require'); }

    return e.prototype.getMaxModuleId = function () { return this._nextId; }, e.prototype.getModuleId = function (e) {
      let t = this._strModuleIdToIntModuleId.get(e);

      return void 0 === t && (t = this._nextId++,
      this._strModuleIdToIntModuleId.set(e, t), this._intModuleIdToStrModuleId[t] = e), t;
    }, e.prototype.getStrModuleId = function (e) { return this._intModuleIdToStrModuleId[e]; }, e;
  }()); const o = (function () {
    function e(e) { this.id = e; }

    return e.EXPORTS = new e(0), e.MODULE = new e(1), e.REQUIRE = new e(2), e;
  }());

  e.RegularDependency = o; const i = function (e, t, r) { this.id = e, this.pluginId = t, this.pluginParam = r; };

  e.PluginDependency = i; const s = (function () {
    function s(t, r, o, i, s) { void 0 === s && (s = 0), this._env = t, this._scriptLoader = r, this._loaderAvailableTimestamp = s, this._defineFunc = o, this._requireFunc = i, this._moduleIdProvider = new n(), this._config = new e.Configuration(this._env), this._modules2 = [], this._knownModules2 = [], this._inverseDependencies2 = [], this._inversePluginDependencies2 = new Map(), this._currentAnnonymousDefineCall = null, this._recorder = null, this._buildInfoPath = [], this._buildInfoDefineStack = [], this._buildInfoDependencies = []; }

    return s.prototype.reset = function () { return new s(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp); },
    s.prototype.getGlobalAMDDefineFunc = function () { return this._defineFunc; }, s.prototype.getGlobalAMDRequireFunc = function () { return this._requireFunc; }, s._findRelevantLocationInStack = function (e, t) {
      for (let r = function (e) { return e.replace(/\\/g, '/'); }, n = r(e), o = t.split(/\n/), i = 0; i < o.length; i++) {
        const s = o[i].match(/(.*):(\d+):(\d+)\)?$/);

        if (s) {
          let d = s[1]; const a = s[2]; const u = s[3]; const l = Math.max(d.lastIndexOf(' ') + 1, d.lastIndexOf('(') + 1);

          if ((d = r(d = d.substr(l))) === n) {
            const c = {line: parseInt(a, 10), col: parseInt(u, 10)};

            return c.line === 1 && (c.col -= '(function (require, define, __filename, __dirname) { '.length), c;
          }
        }
      } throw new Error(`Could not correlate define call site for needle ${e}`);
    }, s.prototype.getBuildInfo = function () {
      if (!this._config.isBuild()) return null; for (var e = [], t = 0, r = 0, n = this._modules2.length; r < n; r++) {
        const o = this._modules2[r];

        if (o) {
          const i = this._buildInfoPath[o.id] || null; const d = this._buildInfoDefineStack[o.id] || null; const a = this._buildInfoDependencies[o.id];

          e[t++] = {
            id: o.strId,
            path: i,
            defineLocation: i && d ? s._findRelevantLocationInStack(i, d) : null,
            dependencies: a,
            shim: null,
            exports: o.exports
          };
        }
      }

      return e;
    }, s.prototype.getRecorder = function () { return this._recorder || (this._config.shouldRecordStats() ? this._recorder = new e.LoaderEventRecorder(this._loaderAvailableTimestamp) : this._recorder = e.NullLoaderEventRecorder.INSTANCE), this._recorder; }, s.prototype.getLoaderEvents = function () { return this.getRecorder().getEvents(); }, s.prototype.enqueueDefineAnonymousModule = function (e, t) {
      if (this._currentAnnonymousDefineCall !== null) throw new Error('Can only have one anonymous define call per script file'); let r = null;

      this._config.isBuild() && (r = new Error('StackLocation').stack || null), this._currentAnnonymousDefineCall = {stack: r, dependencies: e, callback: t};
    }, s.prototype.defineModule = function (e, n, o, i, s, d) {
      const a = this;

      void 0 === d && (d = new t(e)); const u = this._moduleIdProvider.getModuleId(e);

      if (this._modules2[u]) this._config.isDuplicateMessageIgnoredFor(e) || console.warn(`Duplicate definition of module '${e}'`); else {
        const l = new r(u, e, this._normalizeDependencies(n, d), o, i, d);

        this._modules2[u] = l,
        this._config.isBuild() && (this._buildInfoDefineStack[u] = s, this._buildInfoDependencies[u] = (l.dependencies || []).map(((e) => a._moduleIdProvider.getStrModuleId(e.id)))), this._resolve(l);
      }
    }, s.prototype._normalizeDependency = function (e, t) {
      if (e === 'exports') return o.EXPORTS; if (e === 'module') return o.MODULE; if (e === 'require') return o.REQUIRE; const r = e.indexOf('!');

      if (r >= 0) {
        const n = t.resolveModule(e.substr(0, r)); const s = t.resolveModule(e.substr(r + 1)); const d = this._moduleIdProvider.getModuleId(`${n}!${s}`); const a = this._moduleIdProvider.getModuleId(n);

        return new i(d, a, s);
      }

      return new o(this._moduleIdProvider.getModuleId(t.resolveModule(e)));
    }, s.prototype._normalizeDependencies = function (e, t) {
      for (var r = [], n = 0, o = 0, i = e.length; o < i; o++)r[n++] = this._normalizeDependency(e[o], t);

      return r;
    }, s.prototype._relativeRequire = function (t, r, n, o) { if (typeof r === 'string') return this.synchronousRequire(r, t); this.defineModule(e.Utilities.generateAnonymousModule(), r, n, o, null, t); }, s.prototype.synchronousRequire = function (e, r) {
      void 0 === r && (r = new t(e));
      const n = this._normalizeDependency(e, r); const o = this._modules2[n.id];

      if (!o) throw new Error(`Check dependency list! Synchronous require cannot resolve module '${e}'. This is the first mention of this module!`); if (!o.isComplete()) throw new Error(`Check dependency list! Synchronous require cannot resolve module '${e}'. This module has not been resolved completely yet.`); if (o.error) throw o.error;

      return o.exports;
    }, s.prototype.configure = function (t, r) {
      const n = this._config.shouldRecordStats();

      this._config = r ? new e.Configuration(this._env, t) : this._config.cloneAndMerge(t), this._config.shouldRecordStats() && !n && (this._recorder = null);
    }, s.prototype.getConfig = function () { return this._config; }, s.prototype._onLoad = function (e) {
      if (this._currentAnnonymousDefineCall !== null) {
        const t = this._currentAnnonymousDefineCall;

        this._currentAnnonymousDefineCall = null, this.defineModule(this._moduleIdProvider.getStrModuleId(e), t.dependencies, t.callback, null, t.stack);
      }
    }, s.prototype._createLoadError = function (t, r) {
      const n = this; const o = this._moduleIdProvider.getStrModuleId(t); const i = (this._inverseDependencies2[t] || []).map(((e) => n._moduleIdProvider.getStrModuleId(e))); const s = e.ensureError(r);

      return s.phase = 'loading', s.moduleId = o, s.neededBy = i, s;
    }, s.prototype._onLoadError = function (e, t) {
      const n = this._createLoadError(e, t);

      this._modules2[e] || (this._modules2[e] = new r(e, this._moduleIdProvider.getStrModuleId(e), [], ((() => {})), ((() => {})), null)); for (var o = [], i = 0, s = this._moduleIdProvider.getMaxModuleId(); i < s; i++)o[i] = !1; let d = !1; const a = [];

      for (a.push(e), o[e] = !0; a.length > 0;) {
        const u = a.shift(); const l = this._modules2[u];

        l && (d = l.onDependencyError(n) || d); const c = this._inverseDependencies2[u];

        if (c) {
          for (i = 0, s = c.length; i < s; i++) {
            const h = c[i];

            o[h] || (a.push(h), o[h] = !0);
          }
        }
      }d || this._config.onError(n);
    }, s.prototype._hasDependencyPath = function (e, t) {
      const r = this._modules2[e];

      if (!r) return !1; for (var n = [], o = 0, i = this._moduleIdProvider.getMaxModuleId(); o < i; o++)n[o] = !1; const s = [];

      for (s.push(r), n[e] = !0; s.length > 0;) {
        const d = s.shift().dependencies;

        if (d) {
          for (o = 0, i = d.length; o < i; o++) {
            const a = d[o];

            if (a.id === t) return !0; const u = this._modules2[a.id];

            u && !n[a.id] && (n[a.id] = !0, s.push(u));
          }
        }
      }

      return !1;
    }, s.prototype._findCyclePath = function (e, t, r) {
      if (e === t || r === 50) return [e]; const n = this._modules2[e];

      if (!n) return null; const o = n.dependencies;

      if (o) {
        for (let i = 0, s = o.length; i < s; i++) {
          const d = this._findCyclePath(o[i].id, t, r + 1);

          if (d !== null) return d.push(e), d;
        }
      }

      return null;
    }, s.prototype._createRequire = function (t) {
      const r = this; const n = function (e, n, o) { return r._relativeRequire(t, e, n, o); };

      return n.toUrl = function (e) { return r._config.requireToUrl(t.resolveModule(e)); }, n.getStats = function () { return r.getLoaderEvents(); }, n.__$__nodeRequire = e.global.nodeRequire, n;
    }, s.prototype._loadModule = function (e) {
      const t = this;

      if (!this._modules2[e] && !this._knownModules2[e]) {
        this._knownModules2[e] = !0; const r = this._moduleIdProvider.getStrModuleId(e); const n = this._config.moduleIdToPaths(r);

        this._env.isNode && (r.indexOf('/') === -1 || /^@[^\/]+\/[^\/]+$/.test(r)) && n.push(`node|${r}`); let o = -1; var i = function (r) {
          if (++o >= n.length)t._onLoadError(e, r); else {
            const s = n[o]; const d = t.getRecorder();

            if (t._config.isBuild() && s === 'empty:') return t._buildInfoPath[e] = s, t.defineModule(t._moduleIdProvider.getStrModuleId(e), [], null, null, null), void t._onLoad(e); d.record(10, s), t._scriptLoader.load(t, s, (() => { t._config.isBuild() && (t._buildInfoPath[e] = s), d.record(11, s), t._onLoad(e); }), ((e) => { d.record(12, s), i(e); }));
          }
        };

        i(null);
      }
    }, s.prototype._loadPluginDependency = function (e, r) {
      const n = this;

      if (!this._modules2[r.id] && !this._knownModules2[r.id]) {
        this._knownModules2[r.id] = !0; const o = function (e) { n.defineModule(n._moduleIdProvider.getStrModuleId(r.id), [], e, null, null); };

        o.error = function (e) { n._config.onError(n._createLoadError(r.id, e)); }, e.load(r.pluginParam, this._createRequire(t.ROOT), o, this._config.getOptionsLiteral());
      }
    }, s.prototype._resolve = function (e) {
      const t = this; const r = e.dependencies;

      if (r) {
        for (let n = 0, s = r.length; n < s; n++) {
          const d = r[n];

          if (d !== o.EXPORTS) {
            if (d !== o.MODULE) {
              if (d !== o.REQUIRE) {
                const a = this._modules2[d.id];

                if (a && a.isComplete()) {
                  if (a.error) return void e.onDependencyError(a.error); e.unresolvedDependenciesCount--;
                }
                else if (this._hasDependencyPath(d.id, e.id)) {
                  console.warn(`There is a dependency cycle between '${this._moduleIdProvider.getStrModuleId(d.id)}' and '${this._moduleIdProvider.getStrModuleId(e.id)}'. The cyclic path follows:`); const u = this._findCyclePath(d.id, e.id, 0) || [];

                  u.reverse(), u.push(d.id), console.warn(u.map(((e) => t._moduleIdProvider.getStrModuleId(e))).join(' => \n')), e.unresolvedDependenciesCount--;
                }
                else if (this._inverseDependencies2[d.id] = this._inverseDependencies2[d.id] || [], this._inverseDependencies2[d.id].push(e.id), d instanceof i) {
                  const l = this._modules2[d.pluginId];

                  if (l && l.isComplete()) { this._loadPluginDependency(l.exports, d); continue; } let c = this._inversePluginDependencies2.get(d.pluginId);

                  c || (c = [], this._inversePluginDependencies2.set(d.pluginId, c)), c.push(d), this._loadModule(d.pluginId);
                }
                else this._loadModule(d.id);
              }
              else e.unresolvedDependenciesCount--;
            }
            else e.unresolvedDependenciesCount--;
          }
          else e.exportsPassedIn = !0, e.unresolvedDependenciesCount--;
        }
      }
      e.unresolvedDependenciesCount === 0 && this._onModuleComplete(e);
    }, s.prototype._onModuleComplete = function (e) {
      const t = this; const r = this.getRecorder();

      if (!e.isComplete()) {
        const n = e.dependencies; const i = [];

        if (n) {
          for (var s = 0, d = n.length; s < d; s++) {
            const a = n[s];

            if (a !== o.EXPORTS) {
              if (a !== o.MODULE) {
                if (a !== o.REQUIRE) {
                  const u = this._modules2[a.id];

                  i[s] = u ? u.exports : null;
                }
                else i[s] = this._createRequire(e.moduleIdResolver);
              }
              else i[s] = {id: e.strId, config() { return t._config.getConfigForModule(e.strId); }};
            }
            else i[s] = e.exports;
          }
        }e.complete(r, this._config, i); const l = this._inverseDependencies2[e.id];

        if (this._inverseDependencies2[e.id] = null, l) {
          for (s = 0, d = l.length; s < d; s++) {
            const c = l[s]; const h = this._modules2[c];

            h.unresolvedDependenciesCount--, h.unresolvedDependenciesCount === 0 && this._onModuleComplete(h);
          }
        } const f = this._inversePluginDependencies2.get(e.id);

        if (f) { this._inversePluginDependencies2.delete(e.id); for (s = 0, d = f.length; s < d; s++) this._loadPluginDependency(e.exports, f[s]); }
      }
    }, s;
  }());

  e.ModuleManager = s;
}(AMDLoader || (AMDLoader = {}))), (function (e) {
  const t = new e.Environment(); let r = null; const
    n = function (e, t, n) { typeof e !== 'string' && (n = t, t = e, e = null), typeof t === 'object' && Array.isArray(t) || (n = t, t = null), t || (t = ['require', 'exports', 'module']), e ? r.defineModule(e, t, n, null, null) : r.enqueueDefineAnonymousModule(t, n); };

  n.amd = {jQuery: !0}; const o = function (e, t) { void 0 === t && (t = !1), r.configure(e, t); }; const i = function () { if (arguments.length === 1) { if (arguments[0] instanceof Object && !Array.isArray(arguments[0])) return void o(arguments[0]); if (typeof arguments[0] === 'string') return r.synchronousRequire(arguments[0]); } if (arguments.length !== 2 && arguments.length !== 3 || !Array.isArray(arguments[0])) throw new Error('Unrecognized require call'); r.defineModule(e.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null); };

  function s() {
    if (void 0 !== e.global.require || typeof require !== 'undefined') {
      const o = e.global.require || require;

      if (typeof o === 'function' && typeof o.resolve === 'function') {
        const s = function (e) {
          r.getRecorder().record(33, e); try { return o(e); }
          finally { r.getRecorder().record(34, e); }
        };

        e.global.nodeRequire = s, i.nodeRequire = s, i.__$__nodeRequire = s;
      }
    }t.isNode && !t.isElectronRenderer ? (module.exports = i, require = i) : (t.isElectronRenderer || (e.global.define = n), e.global.require = i);
  }i.config = o, i.getConfig = function () { return r.getConfig().getOptionsLiteral(); }, i.reset = function () { r = r.reset(); }, i.getBuildInfo = function () { return r.getBuildInfo(); }, i.getStats = function () { return r.getLoaderEvents(); }, i.define = function () { return n.apply(null, arguments); }, e.init = s, typeof e.global.define === 'function' && e.global.define.amd || (r = new e.ModuleManager(t, e.createScriptLoader(t), n, i, e.Utilities.getHighPerformanceTimestamp()), void 0 !== e.global.require && typeof e.global.require !== 'function' && i.config(e.global.require), (define = function () { return n.apply(null, arguments); }).amd = n.amd, typeof doNotInitLoader === 'undefined' && s());
}(AMDLoader || (AMDLoader = {})));
